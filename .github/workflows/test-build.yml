name: Test Build

on:
    push:
        branches:
            - master
    workflow_dispatch:

env:
  msbuild-dir: 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin'

jobs:
    build:
        name: Test Build
        runs-on: self-hosted

        steps:
            - name: checkout the repository
              uses: actions/checkout@v4

            - name: check NPM version
              run: npm --version

            - name: check msbuild version
              run: |
                  & "${{ env.msbuild-dir }}\msbuild.exe" --version

            - name: get the service name
              run: Get-Service actions.runner.*.name

            # - name: run the cmd command
            #   shell: cmd
            #   run: Get-Service actions.runner.*).name

            # - name: edit the file
            #   # shell: pwsh
            #   run: .\sample\script.ps1

            # - name: edit the file
            #   # shell: powershell
            #   run: |
            #       $command = {
            #           param (
            #               [string]$filePath,
            #               [string]$oldLineContent,
            #               [string]$newLineContent
            #           )

            #           Write-Output "Reading file: $filePath"
            #           $lines = Get-Content -Path $filePath
              
            #           Write-Output "Replacing content..."
            #           $updatedLines = $lines -replace [regex]::Escape($oldLineContent), $newLineContent
              
            #           Write-Output "Writing updated content to file..."
            #           Set-Content -Path $filePath -Value $updatedLines
              
            #           Write-Output "File update complete."
            #       }

            #       $filePath = "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.Targets\ImportAfter\test.targets.txt"
            #       $oldLineContent = "line 2"
            #       $newLineContent = "line changed"

            #       Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `$command -filePath '$filePath' -oldLineContent '$oldLineContent' -newLineContent '$newLineContent'" -Verb RunAs
            #   shell: powershell

            - name: Delete all files
              run: Remove-Item ${{ github.workspace }} -Recurse -Force -ErrorAction SilentlyContinue
